Terminals unused in grammar

   COLON
   MOD


State 125 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: $@1 program_element_list

    3 program_element_list: program_element_list program_element
    4                     | program_element

    5 program_element: variable_declaration SEMICOLON
    6                | function_declaration SEMICOLON
    7                | function_definition
    8                | SEMICOLON

    9 type: INT
   10     | VOID

   11 variable_declaration: variable_declaration COMMA identifier_declaration
   12                     | type identifier_declaration

   13 identifier_declaration: ID BRACKET_OPEN NUM BRACKET_CLOSE
   14                       | ID

   15 $@2: %empty

   16 function_definition: type ID PARA_OPEN PARA_CLOSE $@2 BRACE_OPEN stmt_list BRACE_CLOSE

   17 $@3: %empty

   18 function_definition: type ID PARA_OPEN function_parameter_list PARA_CLOSE $@3 BRACE_OPEN stmt_list BRACE_CLOSE

   19 function_declaration: type ID PARA_OPEN PARA_CLOSE
   20                     | type ID PARA_OPEN function_parameter_list PARA_CLOSE

   21 function_parameter_list: function_parameter
   22                        | function_parameter_list COMMA function_parameter

   23 function_parameter: type identifier_declaration

   24 stmt_list: %empty
   25          | stmt_list stmt

   26 stmt: stmt_block
   27     | variable_declaration SEMICOLON
   28     | expression SEMICOLON
   29     | stmt_conditional
   30     | stmt_loop
   31     | RETURN expression SEMICOLON
   32     | RETURN SEMICOLON
   33     | SEMICOLON

   34 stmt_block: BRACE_OPEN stmt_list BRACE_CLOSE

   35 stmt_conditional: IF PARA_OPEN expression PARA_CLOSE stmt
   36                 | IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt

   37 stmt_loop: WHILE PARA_OPEN expression PARA_CLOSE stmt
   38          | DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON

   39 expression: expression ASSIGN expression
   40           | expression LOGICAL_OR expression
   41           | expression LOGICAL_AND expression
   42           | LOGICAL_NOT expression
   43           | expression EQ expression
   44           | expression NE expression
   45           | expression LS expression
   46           | expression LSEQ expression
   47           | expression GTEQ expression
   48           | expression GT expression
   49           | expression PLUS expression
   50           | expression MINUS expression
   51           | expression SHIFT_LEFT expression
   52           | expression SHIFT_RIGHT expression
   53           | expression MUL expression
   54           | expression DIV expression
   55           | MINUS expression
   56           | PLUS expression
   57           | ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | PARA_OPEN expression PARA_CLOSE
   59           | function_call
   60           | primary

   61 primary: NUM
   62        | ID

   63 function_call: ID PARA_OPEN PARA_CLOSE
   64              | ID PARA_OPEN function_call_parameters PARA_CLOSE

   65 function_call_parameters: function_call_parameters COMMA expression
   66                         | expression


Terminals, with rules where they appear

$end (0) 0
error (256)
DO (258) 38
WHILE (259) 37 38
IF (260) 35 36
ELSE (261) 36
INT (262) 9
VOID (263) 10
RETURN (264) 31 32
COLON (265)
COMMA (266) 11 22 65
SEMICOLON (267) 5 6 8 27 28 31 32 33 38
BRACE_OPEN (268) 16 18 34
BRACE_CLOSE (269) 16 18 34
BRACKET_OPEN (270) 13 57
BRACKET_CLOSE (271) 13 57
PARA_OPEN (272) 16 18 19 20 35 36 37 38 58 63 64
PARA_CLOSE (273) 16 18 19 20 35 36 37 38 58 63 64
ID (274) 13 14 16 18 19 20 57 62 63 64
NUM (275) 13 61
ASSIGN (276) 39
LOGICAL_OR (277) 40
LOGICAL_AND (278) 41
EQ (279) 43
NE (280) 44
LS (281) 45
LSEQ (282) 46
GTEQ (283) 47
GT (284) 48
SHIFT_LEFT (285) 51
SHIFT_RIGHT (286) 52
PLUS (287) 49 56
MINUS (288) 50 55
MUL (289) 53
DIV (290) 54
MOD (291)
LOGICAL_NOT (292) 42
UNARY_MINUS (293)
UNARY_PLUS (294)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 2, on right: 0
$@1 (42)
    on left: 1, on right: 2
program_element_list (43)
    on left: 3 4, on right: 2 3
program_element (44)
    on left: 5 6 7 8, on right: 3 4
type (45)
    on left: 9 10, on right: 12 16 18 19 20 23
variable_declaration (46)
    on left: 11 12, on right: 5 11 27
identifier_declaration (47)
    on left: 13 14, on right: 11 12 23
function_definition (48)
    on left: 16 18, on right: 7
$@2 (49)
    on left: 15, on right: 16
$@3 (50)
    on left: 17, on right: 18
function_declaration (51)
    on left: 19 20, on right: 6
function_parameter_list (52)
    on left: 21 22, on right: 18 20 22
function_parameter (53)
    on left: 23, on right: 21 22
stmt_list (54)
    on left: 24 25, on right: 16 18 25 34
stmt (55)
    on left: 26 27 28 29 30 31 32 33, on right: 25 35 36 37 38
stmt_block (56)
    on left: 34, on right: 26
stmt_conditional (57)
    on left: 35 36, on right: 29
stmt_loop (58)
    on left: 37 38, on right: 30
expression (59)
    on left: 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56
    57 58 59 60, on right: 28 31 35 36 37 38 39 40 41 42 43 44 45 46
    47 48 49 50 51 52 53 54 55 56 58 65 66
primary (60)
    on left: 61 62, on right: 57 60
function_call (61)
    on left: 63 64, on right: 59
function_call_parameters (62)
    on left: 65 66, on right: 64 65


State 0

    0 $accept: . program $end
    1 $@1: . %empty
    2 program: . $@1 program_element_list

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 . program_element_list
    3 program_element_list: . program_element_list program_element
    4                     | . program_element
    5 program_element: . variable_declaration SEMICOLON
    6                | . function_declaration SEMICOLON
    7                | . function_definition
    8                | . SEMICOLON
    9 type: . INT
   10     | . VOID
   11 variable_declaration: . variable_declaration COMMA identifier_declaration
   12                     | . type identifier_declaration
   16 function_definition: . type ID PARA_OPEN PARA_CLOSE $@2 BRACE_OPEN stmt_list BRACE_CLOSE
   18                    | . type ID PARA_OPEN function_parameter_list PARA_CLOSE $@3 BRACE_OPEN stmt_list BRACE_CLOSE
   19 function_declaration: . type ID PARA_OPEN PARA_CLOSE
   20                     | . type ID PARA_OPEN function_parameter_list PARA_CLOSE

    INT        shift, and go to state 4
    VOID       shift, and go to state 5
    SEMICOLON  shift, and go to state 6

    program_element_list  go to state 7
    program_element       go to state 8
    type                  go to state 9
    variable_declaration  go to state 10
    function_definition   go to state 11
    function_declaration  go to state 12


State 3

    0 $accept: program $end .

    $default  accept


State 4

    9 type: INT .

    $default  reduce using rule 9 (type)


State 5

   10 type: VOID .

    $default  reduce using rule 10 (type)


State 6

    8 program_element: SEMICOLON .

    $default  reduce using rule 8 (program_element)


State 7

    2 program: $@1 program_element_list .  [$end]
    3 program_element_list: program_element_list . program_element
    5 program_element: . variable_declaration SEMICOLON
    6                | . function_declaration SEMICOLON
    7                | . function_definition
    8                | . SEMICOLON
    9 type: . INT
   10     | . VOID
   11 variable_declaration: . variable_declaration COMMA identifier_declaration
   12                     | . type identifier_declaration
   16 function_definition: . type ID PARA_OPEN PARA_CLOSE $@2 BRACE_OPEN stmt_list BRACE_CLOSE
   18                    | . type ID PARA_OPEN function_parameter_list PARA_CLOSE $@3 BRACE_OPEN stmt_list BRACE_CLOSE
   19 function_declaration: . type ID PARA_OPEN PARA_CLOSE
   20                     | . type ID PARA_OPEN function_parameter_list PARA_CLOSE

    INT        shift, and go to state 4
    VOID       shift, and go to state 5
    SEMICOLON  shift, and go to state 6

    $default  reduce using rule 2 (program)

    program_element       go to state 13
    type                  go to state 9
    variable_declaration  go to state 10
    function_definition   go to state 11
    function_declaration  go to state 12


State 8

    4 program_element_list: program_element .

    $default  reduce using rule 4 (program_element_list)


State 9

   12 variable_declaration: type . identifier_declaration
   13 identifier_declaration: . ID BRACKET_OPEN NUM BRACKET_CLOSE
   14                       | . ID
   16 function_definition: type . ID PARA_OPEN PARA_CLOSE $@2 BRACE_OPEN stmt_list BRACE_CLOSE
   18                    | type . ID PARA_OPEN function_parameter_list PARA_CLOSE $@3 BRACE_OPEN stmt_list BRACE_CLOSE
   19 function_declaration: type . ID PARA_OPEN PARA_CLOSE
   20                     | type . ID PARA_OPEN function_parameter_list PARA_CLOSE

    ID  shift, and go to state 14

    identifier_declaration  go to state 15


State 10

    5 program_element: variable_declaration . SEMICOLON
   11 variable_declaration: variable_declaration . COMMA identifier_declaration

    COMMA      shift, and go to state 16
    SEMICOLON  shift, and go to state 17


State 11

    7 program_element: function_definition .

    $default  reduce using rule 7 (program_element)


State 12

    6 program_element: function_declaration . SEMICOLON

    SEMICOLON  shift, and go to state 18


State 13

    3 program_element_list: program_element_list program_element .

    $default  reduce using rule 3 (program_element_list)


State 14

   13 identifier_declaration: ID . BRACKET_OPEN NUM BRACKET_CLOSE
   14                       | ID .  [COMMA, SEMICOLON]
   16 function_definition: type ID . PARA_OPEN PARA_CLOSE $@2 BRACE_OPEN stmt_list BRACE_CLOSE
   18                    | type ID . PARA_OPEN function_parameter_list PARA_CLOSE $@3 BRACE_OPEN stmt_list BRACE_CLOSE
   19 function_declaration: type ID . PARA_OPEN PARA_CLOSE
   20                     | type ID . PARA_OPEN function_parameter_list PARA_CLOSE

    BRACKET_OPEN  shift, and go to state 19
    PARA_OPEN     shift, and go to state 20

    $default  reduce using rule 14 (identifier_declaration)


State 15

   12 variable_declaration: type identifier_declaration .

    $default  reduce using rule 12 (variable_declaration)


State 16

   11 variable_declaration: variable_declaration COMMA . identifier_declaration
   13 identifier_declaration: . ID BRACKET_OPEN NUM BRACKET_CLOSE
   14                       | . ID

    ID  shift, and go to state 21

    identifier_declaration  go to state 22


State 17

    5 program_element: variable_declaration SEMICOLON .

    $default  reduce using rule 5 (program_element)


State 18

    6 program_element: function_declaration SEMICOLON .

    $default  reduce using rule 6 (program_element)


State 19

   13 identifier_declaration: ID BRACKET_OPEN . NUM BRACKET_CLOSE

    NUM  shift, and go to state 23


State 20

    9 type: . INT
   10     | . VOID
   16 function_definition: type ID PARA_OPEN . PARA_CLOSE $@2 BRACE_OPEN stmt_list BRACE_CLOSE
   18                    | type ID PARA_OPEN . function_parameter_list PARA_CLOSE $@3 BRACE_OPEN stmt_list BRACE_CLOSE
   19 function_declaration: type ID PARA_OPEN . PARA_CLOSE
   20                     | type ID PARA_OPEN . function_parameter_list PARA_CLOSE
   21 function_parameter_list: . function_parameter
   22                        | . function_parameter_list COMMA function_parameter
   23 function_parameter: . type identifier_declaration

    INT         shift, and go to state 4
    VOID        shift, and go to state 5
    PARA_CLOSE  shift, and go to state 24

    type                     go to state 25
    function_parameter_list  go to state 26
    function_parameter       go to state 27


State 21

   13 identifier_declaration: ID . BRACKET_OPEN NUM BRACKET_CLOSE
   14                       | ID .  [COMMA, SEMICOLON, PARA_CLOSE]

    BRACKET_OPEN  shift, and go to state 19

    $default  reduce using rule 14 (identifier_declaration)


State 22

   11 variable_declaration: variable_declaration COMMA identifier_declaration .

    $default  reduce using rule 11 (variable_declaration)


State 23

   13 identifier_declaration: ID BRACKET_OPEN NUM . BRACKET_CLOSE

    BRACKET_CLOSE  shift, and go to state 28


State 24

   15 $@2: . %empty  [BRACE_OPEN]
   16 function_definition: type ID PARA_OPEN PARA_CLOSE . $@2 BRACE_OPEN stmt_list BRACE_CLOSE
   19 function_declaration: type ID PARA_OPEN PARA_CLOSE .  [SEMICOLON]

    SEMICOLON  reduce using rule 19 (function_declaration)
    $default   reduce using rule 15 ($@2)

    $@2  go to state 29


State 25

   13 identifier_declaration: . ID BRACKET_OPEN NUM BRACKET_CLOSE
   14                       | . ID
   23 function_parameter: type . identifier_declaration

    ID  shift, and go to state 21

    identifier_declaration  go to state 30


State 26

   18 function_definition: type ID PARA_OPEN function_parameter_list . PARA_CLOSE $@3 BRACE_OPEN stmt_list BRACE_CLOSE
   20 function_declaration: type ID PARA_OPEN function_parameter_list . PARA_CLOSE
   22 function_parameter_list: function_parameter_list . COMMA function_parameter

    COMMA       shift, and go to state 31
    PARA_CLOSE  shift, and go to state 32


State 27

   21 function_parameter_list: function_parameter .

    $default  reduce using rule 21 (function_parameter_list)


State 28

   13 identifier_declaration: ID BRACKET_OPEN NUM BRACKET_CLOSE .

    $default  reduce using rule 13 (identifier_declaration)


State 29

   16 function_definition: type ID PARA_OPEN PARA_CLOSE $@2 . BRACE_OPEN stmt_list BRACE_CLOSE

    BRACE_OPEN  shift, and go to state 33


State 30

   23 function_parameter: type identifier_declaration .

    $default  reduce using rule 23 (function_parameter)


State 31

    9 type: . INT
   10     | . VOID
   22 function_parameter_list: function_parameter_list COMMA . function_parameter
   23 function_parameter: . type identifier_declaration

    INT   shift, and go to state 4
    VOID  shift, and go to state 5

    type                go to state 25
    function_parameter  go to state 34


State 32

   17 $@3: . %empty  [BRACE_OPEN]
   18 function_definition: type ID PARA_OPEN function_parameter_list PARA_CLOSE . $@3 BRACE_OPEN stmt_list BRACE_CLOSE
   20 function_declaration: type ID PARA_OPEN function_parameter_list PARA_CLOSE .  [SEMICOLON]

    SEMICOLON  reduce using rule 20 (function_declaration)
    $default   reduce using rule 17 ($@3)

    $@3  go to state 35


State 33

   16 function_definition: type ID PARA_OPEN PARA_CLOSE $@2 BRACE_OPEN . stmt_list BRACE_CLOSE
   24 stmt_list: . %empty
   25          | . stmt_list stmt

    $default  reduce using rule 24 (stmt_list)

    stmt_list  go to state 36


State 34

   22 function_parameter_list: function_parameter_list COMMA function_parameter .

    $default  reduce using rule 22 (function_parameter_list)


State 35

   18 function_definition: type ID PARA_OPEN function_parameter_list PARA_CLOSE $@3 . BRACE_OPEN stmt_list BRACE_CLOSE

    BRACE_OPEN  shift, and go to state 37


State 36

    9 type: . INT
   10     | . VOID
   11 variable_declaration: . variable_declaration COMMA identifier_declaration
   12                     | . type identifier_declaration
   16 function_definition: type ID PARA_OPEN PARA_CLOSE $@2 BRACE_OPEN stmt_list . BRACE_CLOSE
   25 stmt_list: stmt_list . stmt
   26 stmt: . stmt_block
   27     | . variable_declaration SEMICOLON
   28     | . expression SEMICOLON
   29     | . stmt_conditional
   30     | . stmt_loop
   31     | . RETURN expression SEMICOLON
   32     | . RETURN SEMICOLON
   33     | . SEMICOLON
   34 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   35 stmt_conditional: . IF PARA_OPEN expression PARA_CLOSE stmt
   36                 | . IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt
   37 stmt_loop: . WHILE PARA_OPEN expression PARA_CLOSE stmt
   38          | . DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   44           | . expression NE expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   55           | . MINUS expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 38
    WHILE        shift, and go to state 39
    IF           shift, and go to state 40
    INT          shift, and go to state 4
    VOID         shift, and go to state 5
    RETURN       shift, and go to state 41
    SEMICOLON    shift, and go to state 42
    BRACE_OPEN   shift, and go to state 43
    BRACE_CLOSE  shift, and go to state 44
    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    type                  go to state 51
    variable_declaration  go to state 52
    stmt                  go to state 53
    stmt_block            go to state 54
    stmt_conditional      go to state 55
    stmt_loop             go to state 56
    expression            go to state 57
    primary               go to state 58
    function_call         go to state 59


State 37

   18 function_definition: type ID PARA_OPEN function_parameter_list PARA_CLOSE $@3 BRACE_OPEN . stmt_list BRACE_CLOSE
   24 stmt_list: . %empty
   25          | . stmt_list stmt

    $default  reduce using rule 24 (stmt_list)

    stmt_list  go to state 60


State 38

    9 type: . INT
   10     | . VOID
   11 variable_declaration: . variable_declaration COMMA identifier_declaration
   12                     | . type identifier_declaration
   26 stmt: . stmt_block
   27     | . variable_declaration SEMICOLON
   28     | . expression SEMICOLON
   29     | . stmt_conditional
   30     | . stmt_loop
   31     | . RETURN expression SEMICOLON
   32     | . RETURN SEMICOLON
   33     | . SEMICOLON
   34 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   35 stmt_conditional: . IF PARA_OPEN expression PARA_CLOSE stmt
   36                 | . IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt
   37 stmt_loop: . WHILE PARA_OPEN expression PARA_CLOSE stmt
   38          | . DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   38          | DO . stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   44           | . expression NE expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   55           | . MINUS expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 38
    WHILE        shift, and go to state 39
    IF           shift, and go to state 40
    INT          shift, and go to state 4
    VOID         shift, and go to state 5
    RETURN       shift, and go to state 41
    SEMICOLON    shift, and go to state 42
    BRACE_OPEN   shift, and go to state 43
    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    type                  go to state 51
    variable_declaration  go to state 52
    stmt                  go to state 61
    stmt_block            go to state 54
    stmt_conditional      go to state 55
    stmt_loop             go to state 56
    expression            go to state 57
    primary               go to state 58
    function_call         go to state 59


State 39

   37 stmt_loop: WHILE . PARA_OPEN expression PARA_CLOSE stmt

    PARA_OPEN  shift, and go to state 62


State 40

   35 stmt_conditional: IF . PARA_OPEN expression PARA_CLOSE stmt
   36                 | IF . PARA_OPEN expression PARA_CLOSE stmt ELSE stmt

    PARA_OPEN  shift, and go to state 63


State 41

   31 stmt: RETURN . expression SEMICOLON
   32     | RETURN . SEMICOLON
   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   44           | . expression NE expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   55           | . MINUS expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    SEMICOLON    shift, and go to state 64
    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    expression     go to state 65
    primary        go to state 58
    function_call  go to state 59


State 42

   33 stmt: SEMICOLON .

    $default  reduce using rule 33 (stmt)


State 43

   24 stmt_list: . %empty
   25          | . stmt_list stmt
   34 stmt_block: BRACE_OPEN . stmt_list BRACE_CLOSE

    $default  reduce using rule 24 (stmt_list)

    stmt_list  go to state 66


State 44

   16 function_definition: type ID PARA_OPEN PARA_CLOSE $@2 BRACE_OPEN stmt_list BRACE_CLOSE .

    $default  reduce using rule 16 (function_definition)


State 45

   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   44           | . expression NE expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   55           | . MINUS expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   58           | PARA_OPEN . expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    expression     go to state 67
    primary        go to state 58
    function_call  go to state 59


State 46

   57 expression: ID . BRACKET_OPEN primary BRACKET_CLOSE
   62 primary: ID .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, MUL, DIV]
   63 function_call: ID . PARA_OPEN PARA_CLOSE
   64              | ID . PARA_OPEN function_call_parameters PARA_CLOSE

    BRACKET_OPEN  shift, and go to state 68
    PARA_OPEN     shift, and go to state 69

    $default  reduce using rule 62 (primary)


State 47

   61 primary: NUM .

    $default  reduce using rule 61 (primary)


State 48

   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   44           | . expression NE expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   55           | . MINUS expression
   56           | . PLUS expression
   56           | PLUS . expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    expression     go to state 70
    primary        go to state 58
    function_call  go to state 59


State 49

   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   44           | . expression NE expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   55           | . MINUS expression
   55           | MINUS . expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    expression     go to state 71
    primary        go to state 58
    function_call  go to state 59


State 50

   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   42           | LOGICAL_NOT . expression
   43           | . expression EQ expression
   44           | . expression NE expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   55           | . MINUS expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    expression     go to state 72
    primary        go to state 58
    function_call  go to state 59


State 51

   12 variable_declaration: type . identifier_declaration
   13 identifier_declaration: . ID BRACKET_OPEN NUM BRACKET_CLOSE
   14                       | . ID

    ID  shift, and go to state 21

    identifier_declaration  go to state 15


State 52

   11 variable_declaration: variable_declaration . COMMA identifier_declaration
   27 stmt: variable_declaration . SEMICOLON

    COMMA      shift, and go to state 16
    SEMICOLON  shift, and go to state 73


State 53

   25 stmt_list: stmt_list stmt .

    $default  reduce using rule 25 (stmt_list)


State 54

   26 stmt: stmt_block .

    $default  reduce using rule 26 (stmt)


State 55

   29 stmt: stmt_conditional .

    $default  reduce using rule 29 (stmt)


State 56

   30 stmt: stmt_loop .

    $default  reduce using rule 30 (stmt)


State 57

   28 stmt: expression . SEMICOLON
   39 expression: expression . ASSIGN expression
   40           | expression . LOGICAL_OR expression
   41           | expression . LOGICAL_AND expression
   43           | expression . EQ expression
   44           | expression . NE expression
   45           | expression . LS expression
   46           | expression . LSEQ expression
   47           | expression . GTEQ expression
   48           | expression . GT expression
   49           | expression . PLUS expression
   50           | expression . MINUS expression
   51           | expression . SHIFT_LEFT expression
   52           | expression . SHIFT_RIGHT expression
   53           | expression . MUL expression
   54           | expression . DIV expression

    SEMICOLON    shift, and go to state 74
    ASSIGN       shift, and go to state 75
    LOGICAL_OR   shift, and go to state 76
    LOGICAL_AND  shift, and go to state 77
    EQ           shift, and go to state 78
    NE           shift, and go to state 79
    LS           shift, and go to state 80
    LSEQ         shift, and go to state 81
    GTEQ         shift, and go to state 82
    GT           shift, and go to state 83
    SHIFT_LEFT   shift, and go to state 84
    SHIFT_RIGHT  shift, and go to state 85
    PLUS         shift, and go to state 86
    MINUS        shift, and go to state 87
    MUL          shift, and go to state 88
    DIV          shift, and go to state 89


State 58

   60 expression: primary .

    $default  reduce using rule 60 (expression)


State 59

   59 expression: function_call .

    $default  reduce using rule 59 (expression)


State 60

    9 type: . INT
   10     | . VOID
   11 variable_declaration: . variable_declaration COMMA identifier_declaration
   12                     | . type identifier_declaration
   18 function_definition: type ID PARA_OPEN function_parameter_list PARA_CLOSE $@3 BRACE_OPEN stmt_list . BRACE_CLOSE
   25 stmt_list: stmt_list . stmt
   26 stmt: . stmt_block
   27     | . variable_declaration SEMICOLON
   28     | . expression SEMICOLON
   29     | . stmt_conditional
   30     | . stmt_loop
   31     | . RETURN expression SEMICOLON
   32     | . RETURN SEMICOLON
   33     | . SEMICOLON
   34 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   35 stmt_conditional: . IF PARA_OPEN expression PARA_CLOSE stmt
   36                 | . IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt
   37 stmt_loop: . WHILE PARA_OPEN expression PARA_CLOSE stmt
   38          | . DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   44           | . expression NE expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   55           | . MINUS expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 38
    WHILE        shift, and go to state 39
    IF           shift, and go to state 40
    INT          shift, and go to state 4
    VOID         shift, and go to state 5
    RETURN       shift, and go to state 41
    SEMICOLON    shift, and go to state 42
    BRACE_OPEN   shift, and go to state 43
    BRACE_CLOSE  shift, and go to state 90
    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    type                  go to state 51
    variable_declaration  go to state 52
    stmt                  go to state 53
    stmt_block            go to state 54
    stmt_conditional      go to state 55
    stmt_loop             go to state 56
    expression            go to state 57
    primary               go to state 58
    function_call         go to state 59


State 61

   38 stmt_loop: DO stmt . WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON

    WHILE  shift, and go to state 91


State 62

   37 stmt_loop: WHILE PARA_OPEN . expression PARA_CLOSE stmt
   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   44           | . expression NE expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   55           | . MINUS expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    expression     go to state 92
    primary        go to state 58
    function_call  go to state 59


State 63

   35 stmt_conditional: IF PARA_OPEN . expression PARA_CLOSE stmt
   36                 | IF PARA_OPEN . expression PARA_CLOSE stmt ELSE stmt
   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   44           | . expression NE expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   55           | . MINUS expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    expression     go to state 93
    primary        go to state 58
    function_call  go to state 59


State 64

   32 stmt: RETURN SEMICOLON .

    $default  reduce using rule 32 (stmt)


State 65

   31 stmt: RETURN expression . SEMICOLON
   39 expression: expression . ASSIGN expression
   40           | expression . LOGICAL_OR expression
   41           | expression . LOGICAL_AND expression
   43           | expression . EQ expression
   44           | expression . NE expression
   45           | expression . LS expression
   46           | expression . LSEQ expression
   47           | expression . GTEQ expression
   48           | expression . GT expression
   49           | expression . PLUS expression
   50           | expression . MINUS expression
   51           | expression . SHIFT_LEFT expression
   52           | expression . SHIFT_RIGHT expression
   53           | expression . MUL expression
   54           | expression . DIV expression

    SEMICOLON    shift, and go to state 94
    ASSIGN       shift, and go to state 75
    LOGICAL_OR   shift, and go to state 76
    LOGICAL_AND  shift, and go to state 77
    EQ           shift, and go to state 78
    NE           shift, and go to state 79
    LS           shift, and go to state 80
    LSEQ         shift, and go to state 81
    GTEQ         shift, and go to state 82
    GT           shift, and go to state 83
    SHIFT_LEFT   shift, and go to state 84
    SHIFT_RIGHT  shift, and go to state 85
    PLUS         shift, and go to state 86
    MINUS        shift, and go to state 87
    MUL          shift, and go to state 88
    DIV          shift, and go to state 89


State 66

    9 type: . INT
   10     | . VOID
   11 variable_declaration: . variable_declaration COMMA identifier_declaration
   12                     | . type identifier_declaration
   25 stmt_list: stmt_list . stmt
   26 stmt: . stmt_block
   27     | . variable_declaration SEMICOLON
   28     | . expression SEMICOLON
   29     | . stmt_conditional
   30     | . stmt_loop
   31     | . RETURN expression SEMICOLON
   32     | . RETURN SEMICOLON
   33     | . SEMICOLON
   34 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   34           | BRACE_OPEN stmt_list . BRACE_CLOSE
   35 stmt_conditional: . IF PARA_OPEN expression PARA_CLOSE stmt
   36                 | . IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt
   37 stmt_loop: . WHILE PARA_OPEN expression PARA_CLOSE stmt
   38          | . DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   44           | . expression NE expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   55           | . MINUS expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 38
    WHILE        shift, and go to state 39
    IF           shift, and go to state 40
    INT          shift, and go to state 4
    VOID         shift, and go to state 5
    RETURN       shift, and go to state 41
    SEMICOLON    shift, and go to state 42
    BRACE_OPEN   shift, and go to state 43
    BRACE_CLOSE  shift, and go to state 95
    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    type                  go to state 51
    variable_declaration  go to state 52
    stmt                  go to state 53
    stmt_block            go to state 54
    stmt_conditional      go to state 55
    stmt_loop             go to state 56
    expression            go to state 57
    primary               go to state 58
    function_call         go to state 59


State 67

   39 expression: expression . ASSIGN expression
   40           | expression . LOGICAL_OR expression
   41           | expression . LOGICAL_AND expression
   43           | expression . EQ expression
   44           | expression . NE expression
   45           | expression . LS expression
   46           | expression . LSEQ expression
   47           | expression . GTEQ expression
   48           | expression . GT expression
   49           | expression . PLUS expression
   50           | expression . MINUS expression
   51           | expression . SHIFT_LEFT expression
   52           | expression . SHIFT_RIGHT expression
   53           | expression . MUL expression
   54           | expression . DIV expression
   58           | PARA_OPEN expression . PARA_CLOSE

    PARA_CLOSE   shift, and go to state 96
    ASSIGN       shift, and go to state 75
    LOGICAL_OR   shift, and go to state 76
    LOGICAL_AND  shift, and go to state 77
    EQ           shift, and go to state 78
    NE           shift, and go to state 79
    LS           shift, and go to state 80
    LSEQ         shift, and go to state 81
    GTEQ         shift, and go to state 82
    GT           shift, and go to state 83
    SHIFT_LEFT   shift, and go to state 84
    SHIFT_RIGHT  shift, and go to state 85
    PLUS         shift, and go to state 86
    MINUS        shift, and go to state 87
    MUL          shift, and go to state 88
    DIV          shift, and go to state 89


State 68

   57 expression: ID BRACKET_OPEN . primary BRACKET_CLOSE
   61 primary: . NUM
   62        | . ID

    ID   shift, and go to state 97
    NUM  shift, and go to state 47

    primary  go to state 98


State 69

   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   44           | . expression NE expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   55           | . MINUS expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | ID PARA_OPEN . PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE
   64              | ID PARA_OPEN . function_call_parameters PARA_CLOSE
   65 function_call_parameters: . function_call_parameters COMMA expression
   66                         | . expression

    PARA_OPEN    shift, and go to state 45
    PARA_CLOSE   shift, and go to state 99
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    expression                go to state 100
    primary                   go to state 58
    function_call             go to state 59
    function_call_parameters  go to state 101


State 70

   39 expression: expression . ASSIGN expression
   40           | expression . LOGICAL_OR expression
   41           | expression . LOGICAL_AND expression
   43           | expression . EQ expression
   44           | expression . NE expression
   45           | expression . LS expression
   46           | expression . LSEQ expression
   47           | expression . GTEQ expression
   48           | expression . GT expression
   49           | expression . PLUS expression
   50           | expression . MINUS expression
   51           | expression . SHIFT_LEFT expression
   52           | expression . SHIFT_RIGHT expression
   53           | expression . MUL expression
   54           | expression . DIV expression
   56           | PLUS expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, MUL, DIV]

    $default  reduce using rule 56 (expression)

    Conflict between rule 56 and token ASSIGN resolved as reduce (ASSIGN < UNARY_PLUS).
    Conflict between rule 56 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < UNARY_PLUS).
    Conflict between rule 56 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < UNARY_PLUS).
    Conflict between rule 56 and token EQ resolved as reduce (EQ < UNARY_PLUS).
    Conflict between rule 56 and token NE resolved as reduce (NE < UNARY_PLUS).
    Conflict between rule 56 and token LS resolved as reduce (LS < UNARY_PLUS).
    Conflict between rule 56 and token LSEQ resolved as reduce (LSEQ < UNARY_PLUS).
    Conflict between rule 56 and token GTEQ resolved as reduce (GTEQ < UNARY_PLUS).
    Conflict between rule 56 and token GT resolved as reduce (GT < UNARY_PLUS).
    Conflict between rule 56 and token SHIFT_LEFT resolved as reduce (SHIFT_LEFT < UNARY_PLUS).
    Conflict between rule 56 and token SHIFT_RIGHT resolved as reduce (SHIFT_RIGHT < UNARY_PLUS).
    Conflict between rule 56 and token PLUS resolved as reduce (PLUS < UNARY_PLUS).
    Conflict between rule 56 and token MINUS resolved as reduce (MINUS < UNARY_PLUS).
    Conflict between rule 56 and token MUL resolved as reduce (MUL < UNARY_PLUS).
    Conflict between rule 56 and token DIV resolved as reduce (DIV < UNARY_PLUS).


State 71

   39 expression: expression . ASSIGN expression
   40           | expression . LOGICAL_OR expression
   41           | expression . LOGICAL_AND expression
   43           | expression . EQ expression
   44           | expression . NE expression
   45           | expression . LS expression
   46           | expression . LSEQ expression
   47           | expression . GTEQ expression
   48           | expression . GT expression
   49           | expression . PLUS expression
   50           | expression . MINUS expression
   51           | expression . SHIFT_LEFT expression
   52           | expression . SHIFT_RIGHT expression
   53           | expression . MUL expression
   54           | expression . DIV expression
   55           | MINUS expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, MUL, DIV]

    $default  reduce using rule 55 (expression)

    Conflict between rule 55 and token ASSIGN resolved as reduce (ASSIGN < UNARY_MINUS).
    Conflict between rule 55 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < UNARY_MINUS).
    Conflict between rule 55 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < UNARY_MINUS).
    Conflict between rule 55 and token EQ resolved as reduce (EQ < UNARY_MINUS).
    Conflict between rule 55 and token NE resolved as reduce (NE < UNARY_MINUS).
    Conflict between rule 55 and token LS resolved as reduce (LS < UNARY_MINUS).
    Conflict between rule 55 and token LSEQ resolved as reduce (LSEQ < UNARY_MINUS).
    Conflict between rule 55 and token GTEQ resolved as reduce (GTEQ < UNARY_MINUS).
    Conflict between rule 55 and token GT resolved as reduce (GT < UNARY_MINUS).
    Conflict between rule 55 and token SHIFT_LEFT resolved as reduce (SHIFT_LEFT < UNARY_MINUS).
    Conflict between rule 55 and token SHIFT_RIGHT resolved as reduce (SHIFT_RIGHT < UNARY_MINUS).
    Conflict between rule 55 and token PLUS resolved as reduce (PLUS < UNARY_MINUS).
    Conflict between rule 55 and token MINUS resolved as reduce (MINUS < UNARY_MINUS).
    Conflict between rule 55 and token MUL resolved as reduce (MUL < UNARY_MINUS).
    Conflict between rule 55 and token DIV resolved as reduce (DIV < UNARY_MINUS).


State 72

   39 expression: expression . ASSIGN expression
   40           | expression . LOGICAL_OR expression
   41           | expression . LOGICAL_AND expression
   42           | LOGICAL_NOT expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, MUL, DIV]
   43           | expression . EQ expression
   44           | expression . NE expression
   45           | expression . LS expression
   46           | expression . LSEQ expression
   47           | expression . GTEQ expression
   48           | expression . GT expression
   49           | expression . PLUS expression
   50           | expression . MINUS expression
   51           | expression . SHIFT_LEFT expression
   52           | expression . SHIFT_RIGHT expression
   53           | expression . MUL expression
   54           | expression . DIV expression

    $default  reduce using rule 42 (expression)

    Conflict between rule 42 and token ASSIGN resolved as reduce (ASSIGN < LOGICAL_NOT).
    Conflict between rule 42 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < LOGICAL_NOT).
    Conflict between rule 42 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < LOGICAL_NOT).
    Conflict between rule 42 and token EQ resolved as reduce (EQ < LOGICAL_NOT).
    Conflict between rule 42 and token NE resolved as reduce (NE < LOGICAL_NOT).
    Conflict between rule 42 and token LS resolved as reduce (LS < LOGICAL_NOT).
    Conflict between rule 42 and token LSEQ resolved as reduce (LSEQ < LOGICAL_NOT).
    Conflict between rule 42 and token GTEQ resolved as reduce (GTEQ < LOGICAL_NOT).
    Conflict between rule 42 and token GT resolved as reduce (GT < LOGICAL_NOT).
    Conflict between rule 42 and token SHIFT_LEFT resolved as reduce (SHIFT_LEFT < LOGICAL_NOT).
    Conflict between rule 42 and token SHIFT_RIGHT resolved as reduce (SHIFT_RIGHT < LOGICAL_NOT).
    Conflict between rule 42 and token PLUS resolved as reduce (PLUS < LOGICAL_NOT).
    Conflict between rule 42 and token MINUS resolved as reduce (MINUS < LOGICAL_NOT).
    Conflict between rule 42 and token MUL resolved as reduce (MUL < LOGICAL_NOT).
    Conflict between rule 42 and token DIV resolved as reduce (DIV < LOGICAL_NOT).


State 73

   27 stmt: variable_declaration SEMICOLON .

    $default  reduce using rule 27 (stmt)


State 74

   28 stmt: expression SEMICOLON .

    $default  reduce using rule 28 (stmt)


State 75

   39 expression: . expression ASSIGN expression
   39           | expression ASSIGN . expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   44           | . expression NE expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   55           | . MINUS expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    expression     go to state 102
    primary        go to state 58
    function_call  go to state 59


State 76

   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   40           | expression LOGICAL_OR . expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   44           | . expression NE expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   55           | . MINUS expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    expression     go to state 103
    primary        go to state 58
    function_call  go to state 59


State 77

   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   41           | expression LOGICAL_AND . expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   44           | . expression NE expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   55           | . MINUS expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    expression     go to state 104
    primary        go to state 58
    function_call  go to state 59


State 78

   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   43           | expression EQ . expression
   44           | . expression NE expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   55           | . MINUS expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    expression     go to state 105
    primary        go to state 58
    function_call  go to state 59


State 79

   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   44           | . expression NE expression
   44           | expression NE . expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   55           | . MINUS expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    expression     go to state 106
    primary        go to state 58
    function_call  go to state 59


State 80

   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   44           | . expression NE expression
   45           | . expression LS expression
   45           | expression LS . expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   55           | . MINUS expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    expression     go to state 107
    primary        go to state 58
    function_call  go to state 59


State 81

   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   44           | . expression NE expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   46           | expression LSEQ . expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   55           | . MINUS expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    expression     go to state 108
    primary        go to state 58
    function_call  go to state 59


State 82

   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   44           | . expression NE expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   47           | expression GTEQ . expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   55           | . MINUS expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    expression     go to state 109
    primary        go to state 58
    function_call  go to state 59


State 83

   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   44           | . expression NE expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   48           | expression GT . expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   55           | . MINUS expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    expression     go to state 110
    primary        go to state 58
    function_call  go to state 59


State 84

   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   44           | . expression NE expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   51           | expression SHIFT_LEFT . expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   55           | . MINUS expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    expression     go to state 111
    primary        go to state 58
    function_call  go to state 59


State 85

   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   44           | . expression NE expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   52           | expression SHIFT_RIGHT . expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   55           | . MINUS expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    expression     go to state 112
    primary        go to state 58
    function_call  go to state 59


State 86

   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   44           | . expression NE expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   49           | expression PLUS . expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   55           | . MINUS expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    expression     go to state 113
    primary        go to state 58
    function_call  go to state 59


State 87

   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   44           | . expression NE expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   50           | expression MINUS . expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   55           | . MINUS expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    expression     go to state 114
    primary        go to state 58
    function_call  go to state 59


State 88

   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   44           | . expression NE expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   53           | expression MUL . expression
   54           | . expression DIV expression
   55           | . MINUS expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    expression     go to state 115
    primary        go to state 58
    function_call  go to state 59


State 89

   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   44           | . expression NE expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   54           | expression DIV . expression
   55           | . MINUS expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    expression     go to state 116
    primary        go to state 58
    function_call  go to state 59


State 90

   18 function_definition: type ID PARA_OPEN function_parameter_list PARA_CLOSE $@3 BRACE_OPEN stmt_list BRACE_CLOSE .

    $default  reduce using rule 18 (function_definition)


State 91

   38 stmt_loop: DO stmt WHILE . PARA_OPEN expression PARA_CLOSE SEMICOLON

    PARA_OPEN  shift, and go to state 117


State 92

   37 stmt_loop: WHILE PARA_OPEN expression . PARA_CLOSE stmt
   39 expression: expression . ASSIGN expression
   40           | expression . LOGICAL_OR expression
   41           | expression . LOGICAL_AND expression
   43           | expression . EQ expression
   44           | expression . NE expression
   45           | expression . LS expression
   46           | expression . LSEQ expression
   47           | expression . GTEQ expression
   48           | expression . GT expression
   49           | expression . PLUS expression
   50           | expression . MINUS expression
   51           | expression . SHIFT_LEFT expression
   52           | expression . SHIFT_RIGHT expression
   53           | expression . MUL expression
   54           | expression . DIV expression

    PARA_CLOSE   shift, and go to state 118
    ASSIGN       shift, and go to state 75
    LOGICAL_OR   shift, and go to state 76
    LOGICAL_AND  shift, and go to state 77
    EQ           shift, and go to state 78
    NE           shift, and go to state 79
    LS           shift, and go to state 80
    LSEQ         shift, and go to state 81
    GTEQ         shift, and go to state 82
    GT           shift, and go to state 83
    SHIFT_LEFT   shift, and go to state 84
    SHIFT_RIGHT  shift, and go to state 85
    PLUS         shift, and go to state 86
    MINUS        shift, and go to state 87
    MUL          shift, and go to state 88
    DIV          shift, and go to state 89


State 93

   35 stmt_conditional: IF PARA_OPEN expression . PARA_CLOSE stmt
   36                 | IF PARA_OPEN expression . PARA_CLOSE stmt ELSE stmt
   39 expression: expression . ASSIGN expression
   40           | expression . LOGICAL_OR expression
   41           | expression . LOGICAL_AND expression
   43           | expression . EQ expression
   44           | expression . NE expression
   45           | expression . LS expression
   46           | expression . LSEQ expression
   47           | expression . GTEQ expression
   48           | expression . GT expression
   49           | expression . PLUS expression
   50           | expression . MINUS expression
   51           | expression . SHIFT_LEFT expression
   52           | expression . SHIFT_RIGHT expression
   53           | expression . MUL expression
   54           | expression . DIV expression

    PARA_CLOSE   shift, and go to state 119
    ASSIGN       shift, and go to state 75
    LOGICAL_OR   shift, and go to state 76
    LOGICAL_AND  shift, and go to state 77
    EQ           shift, and go to state 78
    NE           shift, and go to state 79
    LS           shift, and go to state 80
    LSEQ         shift, and go to state 81
    GTEQ         shift, and go to state 82
    GT           shift, and go to state 83
    SHIFT_LEFT   shift, and go to state 84
    SHIFT_RIGHT  shift, and go to state 85
    PLUS         shift, and go to state 86
    MINUS        shift, and go to state 87
    MUL          shift, and go to state 88
    DIV          shift, and go to state 89


State 94

   31 stmt: RETURN expression SEMICOLON .

    $default  reduce using rule 31 (stmt)


State 95

   34 stmt_block: BRACE_OPEN stmt_list BRACE_CLOSE .

    $default  reduce using rule 34 (stmt_block)


State 96

   58 expression: PARA_OPEN expression PARA_CLOSE .

    $default  reduce using rule 58 (expression)


State 97

   62 primary: ID .

    $default  reduce using rule 62 (primary)


State 98

   57 expression: ID BRACKET_OPEN primary . BRACKET_CLOSE

    BRACKET_CLOSE  shift, and go to state 120


State 99

   63 function_call: ID PARA_OPEN PARA_CLOSE .

    $default  reduce using rule 63 (function_call)


State 100

   39 expression: expression . ASSIGN expression
   40           | expression . LOGICAL_OR expression
   41           | expression . LOGICAL_AND expression
   43           | expression . EQ expression
   44           | expression . NE expression
   45           | expression . LS expression
   46           | expression . LSEQ expression
   47           | expression . GTEQ expression
   48           | expression . GT expression
   49           | expression . PLUS expression
   50           | expression . MINUS expression
   51           | expression . SHIFT_LEFT expression
   52           | expression . SHIFT_RIGHT expression
   53           | expression . MUL expression
   54           | expression . DIV expression
   66 function_call_parameters: expression .  [COMMA, PARA_CLOSE]

    ASSIGN       shift, and go to state 75
    LOGICAL_OR   shift, and go to state 76
    LOGICAL_AND  shift, and go to state 77
    EQ           shift, and go to state 78
    NE           shift, and go to state 79
    LS           shift, and go to state 80
    LSEQ         shift, and go to state 81
    GTEQ         shift, and go to state 82
    GT           shift, and go to state 83
    SHIFT_LEFT   shift, and go to state 84
    SHIFT_RIGHT  shift, and go to state 85
    PLUS         shift, and go to state 86
    MINUS        shift, and go to state 87
    MUL          shift, and go to state 88
    DIV          shift, and go to state 89

    $default  reduce using rule 66 (function_call_parameters)


State 101

   64 function_call: ID PARA_OPEN function_call_parameters . PARA_CLOSE
   65 function_call_parameters: function_call_parameters . COMMA expression

    COMMA       shift, and go to state 121
    PARA_CLOSE  shift, and go to state 122


State 102

   39 expression: expression . ASSIGN expression
   39           | expression ASSIGN expression .  [COMMA, SEMICOLON, PARA_CLOSE]
   40           | expression . LOGICAL_OR expression
   41           | expression . LOGICAL_AND expression
   43           | expression . EQ expression
   44           | expression . NE expression
   45           | expression . LS expression
   46           | expression . LSEQ expression
   47           | expression . GTEQ expression
   48           | expression . GT expression
   49           | expression . PLUS expression
   50           | expression . MINUS expression
   51           | expression . SHIFT_LEFT expression
   52           | expression . SHIFT_RIGHT expression
   53           | expression . MUL expression
   54           | expression . DIV expression

    ASSIGN       shift, and go to state 75
    LOGICAL_OR   shift, and go to state 76
    LOGICAL_AND  shift, and go to state 77
    EQ           shift, and go to state 78
    NE           shift, and go to state 79
    LS           shift, and go to state 80
    LSEQ         shift, and go to state 81
    GTEQ         shift, and go to state 82
    GT           shift, and go to state 83
    SHIFT_LEFT   shift, and go to state 84
    SHIFT_RIGHT  shift, and go to state 85
    PLUS         shift, and go to state 86
    MINUS        shift, and go to state 87
    MUL          shift, and go to state 88
    DIV          shift, and go to state 89

    $default  reduce using rule 39 (expression)

    Conflict between rule 39 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 39 and token LOGICAL_OR resolved as shift (ASSIGN < LOGICAL_OR).
    Conflict between rule 39 and token LOGICAL_AND resolved as shift (ASSIGN < LOGICAL_AND).
    Conflict between rule 39 and token EQ resolved as shift (ASSIGN < EQ).
    Conflict between rule 39 and token NE resolved as shift (ASSIGN < NE).
    Conflict between rule 39 and token LS resolved as shift (ASSIGN < LS).
    Conflict between rule 39 and token LSEQ resolved as shift (ASSIGN < LSEQ).
    Conflict between rule 39 and token GTEQ resolved as shift (ASSIGN < GTEQ).
    Conflict between rule 39 and token GT resolved as shift (ASSIGN < GT).
    Conflict between rule 39 and token SHIFT_LEFT resolved as shift (ASSIGN < SHIFT_LEFT).
    Conflict between rule 39 and token SHIFT_RIGHT resolved as shift (ASSIGN < SHIFT_RIGHT).
    Conflict between rule 39 and token PLUS resolved as shift (ASSIGN < PLUS).
    Conflict between rule 39 and token MINUS resolved as shift (ASSIGN < MINUS).
    Conflict between rule 39 and token MUL resolved as shift (ASSIGN < MUL).
    Conflict between rule 39 and token DIV resolved as shift (ASSIGN < DIV).


State 103

   39 expression: expression . ASSIGN expression
   40           | expression . LOGICAL_OR expression
   40           | expression LOGICAL_OR expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR]
   41           | expression . LOGICAL_AND expression
   43           | expression . EQ expression
   44           | expression . NE expression
   45           | expression . LS expression
   46           | expression . LSEQ expression
   47           | expression . GTEQ expression
   48           | expression . GT expression
   49           | expression . PLUS expression
   50           | expression . MINUS expression
   51           | expression . SHIFT_LEFT expression
   52           | expression . SHIFT_RIGHT expression
   53           | expression . MUL expression
   54           | expression . DIV expression

    LOGICAL_AND  shift, and go to state 77
    EQ           shift, and go to state 78
    NE           shift, and go to state 79
    LS           shift, and go to state 80
    LSEQ         shift, and go to state 81
    GTEQ         shift, and go to state 82
    GT           shift, and go to state 83
    SHIFT_LEFT   shift, and go to state 84
    SHIFT_RIGHT  shift, and go to state 85
    PLUS         shift, and go to state 86
    MINUS        shift, and go to state 87
    MUL          shift, and go to state 88
    DIV          shift, and go to state 89

    $default  reduce using rule 40 (expression)

    Conflict between rule 40 and token ASSIGN resolved as reduce (ASSIGN < LOGICAL_OR).
    Conflict between rule 40 and token LOGICAL_OR resolved as reduce (%left LOGICAL_OR).
    Conflict between rule 40 and token LOGICAL_AND resolved as shift (LOGICAL_OR < LOGICAL_AND).
    Conflict between rule 40 and token EQ resolved as shift (LOGICAL_OR < EQ).
    Conflict between rule 40 and token NE resolved as shift (LOGICAL_OR < NE).
    Conflict between rule 40 and token LS resolved as shift (LOGICAL_OR < LS).
    Conflict between rule 40 and token LSEQ resolved as shift (LOGICAL_OR < LSEQ).
    Conflict between rule 40 and token GTEQ resolved as shift (LOGICAL_OR < GTEQ).
    Conflict between rule 40 and token GT resolved as shift (LOGICAL_OR < GT).
    Conflict between rule 40 and token SHIFT_LEFT resolved as shift (LOGICAL_OR < SHIFT_LEFT).
    Conflict between rule 40 and token SHIFT_RIGHT resolved as shift (LOGICAL_OR < SHIFT_RIGHT).
    Conflict between rule 40 and token PLUS resolved as shift (LOGICAL_OR < PLUS).
    Conflict between rule 40 and token MINUS resolved as shift (LOGICAL_OR < MINUS).
    Conflict between rule 40 and token MUL resolved as shift (LOGICAL_OR < MUL).
    Conflict between rule 40 and token DIV resolved as shift (LOGICAL_OR < DIV).


State 104

   39 expression: expression . ASSIGN expression
   40           | expression . LOGICAL_OR expression
   41           | expression . LOGICAL_AND expression
   41           | expression LOGICAL_AND expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND]
   43           | expression . EQ expression
   44           | expression . NE expression
   45           | expression . LS expression
   46           | expression . LSEQ expression
   47           | expression . GTEQ expression
   48           | expression . GT expression
   49           | expression . PLUS expression
   50           | expression . MINUS expression
   51           | expression . SHIFT_LEFT expression
   52           | expression . SHIFT_RIGHT expression
   53           | expression . MUL expression
   54           | expression . DIV expression

    EQ           shift, and go to state 78
    NE           shift, and go to state 79
    LS           shift, and go to state 80
    LSEQ         shift, and go to state 81
    GTEQ         shift, and go to state 82
    GT           shift, and go to state 83
    SHIFT_LEFT   shift, and go to state 84
    SHIFT_RIGHT  shift, and go to state 85
    PLUS         shift, and go to state 86
    MINUS        shift, and go to state 87
    MUL          shift, and go to state 88
    DIV          shift, and go to state 89

    $default  reduce using rule 41 (expression)

    Conflict between rule 41 and token ASSIGN resolved as reduce (ASSIGN < LOGICAL_AND).
    Conflict between rule 41 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < LOGICAL_AND).
    Conflict between rule 41 and token LOGICAL_AND resolved as reduce (%left LOGICAL_AND).
    Conflict between rule 41 and token EQ resolved as shift (LOGICAL_AND < EQ).
    Conflict between rule 41 and token NE resolved as shift (LOGICAL_AND < NE).
    Conflict between rule 41 and token LS resolved as shift (LOGICAL_AND < LS).
    Conflict between rule 41 and token LSEQ resolved as shift (LOGICAL_AND < LSEQ).
    Conflict between rule 41 and token GTEQ resolved as shift (LOGICAL_AND < GTEQ).
    Conflict between rule 41 and token GT resolved as shift (LOGICAL_AND < GT).
    Conflict between rule 41 and token SHIFT_LEFT resolved as shift (LOGICAL_AND < SHIFT_LEFT).
    Conflict between rule 41 and token SHIFT_RIGHT resolved as shift (LOGICAL_AND < SHIFT_RIGHT).
    Conflict between rule 41 and token PLUS resolved as shift (LOGICAL_AND < PLUS).
    Conflict between rule 41 and token MINUS resolved as shift (LOGICAL_AND < MINUS).
    Conflict between rule 41 and token MUL resolved as shift (LOGICAL_AND < MUL).
    Conflict between rule 41 and token DIV resolved as shift (LOGICAL_AND < DIV).


State 105

   39 expression: expression . ASSIGN expression
   40           | expression . LOGICAL_OR expression
   41           | expression . LOGICAL_AND expression
   43           | expression . EQ expression
   43           | expression EQ expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE]
   44           | expression . NE expression
   45           | expression . LS expression
   46           | expression . LSEQ expression
   47           | expression . GTEQ expression
   48           | expression . GT expression
   49           | expression . PLUS expression
   50           | expression . MINUS expression
   51           | expression . SHIFT_LEFT expression
   52           | expression . SHIFT_RIGHT expression
   53           | expression . MUL expression
   54           | expression . DIV expression

    LS           shift, and go to state 80
    LSEQ         shift, and go to state 81
    GTEQ         shift, and go to state 82
    GT           shift, and go to state 83
    SHIFT_LEFT   shift, and go to state 84
    SHIFT_RIGHT  shift, and go to state 85
    PLUS         shift, and go to state 86
    MINUS        shift, and go to state 87
    MUL          shift, and go to state 88
    DIV          shift, and go to state 89

    $default  reduce using rule 43 (expression)

    Conflict between rule 43 and token ASSIGN resolved as reduce (ASSIGN < EQ).
    Conflict between rule 43 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < EQ).
    Conflict between rule 43 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < EQ).
    Conflict between rule 43 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 43 and token NE resolved as reduce (%left NE).
    Conflict between rule 43 and token LS resolved as shift (EQ < LS).
    Conflict between rule 43 and token LSEQ resolved as shift (EQ < LSEQ).
    Conflict between rule 43 and token GTEQ resolved as shift (EQ < GTEQ).
    Conflict between rule 43 and token GT resolved as shift (EQ < GT).
    Conflict between rule 43 and token SHIFT_LEFT resolved as shift (EQ < SHIFT_LEFT).
    Conflict between rule 43 and token SHIFT_RIGHT resolved as shift (EQ < SHIFT_RIGHT).
    Conflict between rule 43 and token PLUS resolved as shift (EQ < PLUS).
    Conflict between rule 43 and token MINUS resolved as shift (EQ < MINUS).
    Conflict between rule 43 and token MUL resolved as shift (EQ < MUL).
    Conflict between rule 43 and token DIV resolved as shift (EQ < DIV).


State 106

   39 expression: expression . ASSIGN expression
   40           | expression . LOGICAL_OR expression
   41           | expression . LOGICAL_AND expression
   43           | expression . EQ expression
   44           | expression . NE expression
   44           | expression NE expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE]
   45           | expression . LS expression
   46           | expression . LSEQ expression
   47           | expression . GTEQ expression
   48           | expression . GT expression
   49           | expression . PLUS expression
   50           | expression . MINUS expression
   51           | expression . SHIFT_LEFT expression
   52           | expression . SHIFT_RIGHT expression
   53           | expression . MUL expression
   54           | expression . DIV expression

    LS           shift, and go to state 80
    LSEQ         shift, and go to state 81
    GTEQ         shift, and go to state 82
    GT           shift, and go to state 83
    SHIFT_LEFT   shift, and go to state 84
    SHIFT_RIGHT  shift, and go to state 85
    PLUS         shift, and go to state 86
    MINUS        shift, and go to state 87
    MUL          shift, and go to state 88
    DIV          shift, and go to state 89

    $default  reduce using rule 44 (expression)

    Conflict between rule 44 and token ASSIGN resolved as reduce (ASSIGN < NE).
    Conflict between rule 44 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < NE).
    Conflict between rule 44 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < NE).
    Conflict between rule 44 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 44 and token NE resolved as reduce (%left NE).
    Conflict between rule 44 and token LS resolved as shift (NE < LS).
    Conflict between rule 44 and token LSEQ resolved as shift (NE < LSEQ).
    Conflict between rule 44 and token GTEQ resolved as shift (NE < GTEQ).
    Conflict between rule 44 and token GT resolved as shift (NE < GT).
    Conflict between rule 44 and token SHIFT_LEFT resolved as shift (NE < SHIFT_LEFT).
    Conflict between rule 44 and token SHIFT_RIGHT resolved as shift (NE < SHIFT_RIGHT).
    Conflict between rule 44 and token PLUS resolved as shift (NE < PLUS).
    Conflict between rule 44 and token MINUS resolved as shift (NE < MINUS).
    Conflict between rule 44 and token MUL resolved as shift (NE < MUL).
    Conflict between rule 44 and token DIV resolved as shift (NE < DIV).


State 107

   39 expression: expression . ASSIGN expression
   40           | expression . LOGICAL_OR expression
   41           | expression . LOGICAL_AND expression
   43           | expression . EQ expression
   44           | expression . NE expression
   45           | expression . LS expression
   45           | expression LS expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT]
   46           | expression . LSEQ expression
   47           | expression . GTEQ expression
   48           | expression . GT expression
   49           | expression . PLUS expression
   50           | expression . MINUS expression
   51           | expression . SHIFT_LEFT expression
   52           | expression . SHIFT_RIGHT expression
   53           | expression . MUL expression
   54           | expression . DIV expression

    SHIFT_LEFT   shift, and go to state 84
    SHIFT_RIGHT  shift, and go to state 85
    PLUS         shift, and go to state 86
    MINUS        shift, and go to state 87
    MUL          shift, and go to state 88
    DIV          shift, and go to state 89

    $default  reduce using rule 45 (expression)

    Conflict between rule 45 and token ASSIGN resolved as reduce (ASSIGN < LS).
    Conflict between rule 45 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < LS).
    Conflict between rule 45 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < LS).
    Conflict between rule 45 and token EQ resolved as reduce (EQ < LS).
    Conflict between rule 45 and token NE resolved as reduce (NE < LS).
    Conflict between rule 45 and token LS resolved as reduce (%left LS).
    Conflict between rule 45 and token LSEQ resolved as reduce (%left LSEQ).
    Conflict between rule 45 and token GTEQ resolved as reduce (%left GTEQ).
    Conflict between rule 45 and token GT resolved as reduce (%left GT).
    Conflict between rule 45 and token SHIFT_LEFT resolved as shift (LS < SHIFT_LEFT).
    Conflict between rule 45 and token SHIFT_RIGHT resolved as shift (LS < SHIFT_RIGHT).
    Conflict between rule 45 and token PLUS resolved as shift (LS < PLUS).
    Conflict between rule 45 and token MINUS resolved as shift (LS < MINUS).
    Conflict between rule 45 and token MUL resolved as shift (LS < MUL).
    Conflict between rule 45 and token DIV resolved as shift (LS < DIV).


State 108

   39 expression: expression . ASSIGN expression
   40           | expression . LOGICAL_OR expression
   41           | expression . LOGICAL_AND expression
   43           | expression . EQ expression
   44           | expression . NE expression
   45           | expression . LS expression
   46           | expression . LSEQ expression
   46           | expression LSEQ expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT]
   47           | expression . GTEQ expression
   48           | expression . GT expression
   49           | expression . PLUS expression
   50           | expression . MINUS expression
   51           | expression . SHIFT_LEFT expression
   52           | expression . SHIFT_RIGHT expression
   53           | expression . MUL expression
   54           | expression . DIV expression

    SHIFT_LEFT   shift, and go to state 84
    SHIFT_RIGHT  shift, and go to state 85
    PLUS         shift, and go to state 86
    MINUS        shift, and go to state 87
    MUL          shift, and go to state 88
    DIV          shift, and go to state 89

    $default  reduce using rule 46 (expression)

    Conflict between rule 46 and token ASSIGN resolved as reduce (ASSIGN < LSEQ).
    Conflict between rule 46 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < LSEQ).
    Conflict between rule 46 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < LSEQ).
    Conflict between rule 46 and token EQ resolved as reduce (EQ < LSEQ).
    Conflict between rule 46 and token NE resolved as reduce (NE < LSEQ).
    Conflict between rule 46 and token LS resolved as reduce (%left LS).
    Conflict between rule 46 and token LSEQ resolved as reduce (%left LSEQ).
    Conflict between rule 46 and token GTEQ resolved as reduce (%left GTEQ).
    Conflict between rule 46 and token GT resolved as reduce (%left GT).
    Conflict between rule 46 and token SHIFT_LEFT resolved as shift (LSEQ < SHIFT_LEFT).
    Conflict between rule 46 and token SHIFT_RIGHT resolved as shift (LSEQ < SHIFT_RIGHT).
    Conflict between rule 46 and token PLUS resolved as shift (LSEQ < PLUS).
    Conflict between rule 46 and token MINUS resolved as shift (LSEQ < MINUS).
    Conflict between rule 46 and token MUL resolved as shift (LSEQ < MUL).
    Conflict between rule 46 and token DIV resolved as shift (LSEQ < DIV).


State 109

   39 expression: expression . ASSIGN expression
   40           | expression . LOGICAL_OR expression
   41           | expression . LOGICAL_AND expression
   43           | expression . EQ expression
   44           | expression . NE expression
   45           | expression . LS expression
   46           | expression . LSEQ expression
   47           | expression . GTEQ expression
   47           | expression GTEQ expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT]
   48           | expression . GT expression
   49           | expression . PLUS expression
   50           | expression . MINUS expression
   51           | expression . SHIFT_LEFT expression
   52           | expression . SHIFT_RIGHT expression
   53           | expression . MUL expression
   54           | expression . DIV expression

    SHIFT_LEFT   shift, and go to state 84
    SHIFT_RIGHT  shift, and go to state 85
    PLUS         shift, and go to state 86
    MINUS        shift, and go to state 87
    MUL          shift, and go to state 88
    DIV          shift, and go to state 89

    $default  reduce using rule 47 (expression)

    Conflict between rule 47 and token ASSIGN resolved as reduce (ASSIGN < GTEQ).
    Conflict between rule 47 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < GTEQ).
    Conflict between rule 47 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < GTEQ).
    Conflict between rule 47 and token EQ resolved as reduce (EQ < GTEQ).
    Conflict between rule 47 and token NE resolved as reduce (NE < GTEQ).
    Conflict between rule 47 and token LS resolved as reduce (%left LS).
    Conflict between rule 47 and token LSEQ resolved as reduce (%left LSEQ).
    Conflict between rule 47 and token GTEQ resolved as reduce (%left GTEQ).
    Conflict between rule 47 and token GT resolved as reduce (%left GT).
    Conflict between rule 47 and token SHIFT_LEFT resolved as shift (GTEQ < SHIFT_LEFT).
    Conflict between rule 47 and token SHIFT_RIGHT resolved as shift (GTEQ < SHIFT_RIGHT).
    Conflict between rule 47 and token PLUS resolved as shift (GTEQ < PLUS).
    Conflict between rule 47 and token MINUS resolved as shift (GTEQ < MINUS).
    Conflict between rule 47 and token MUL resolved as shift (GTEQ < MUL).
    Conflict between rule 47 and token DIV resolved as shift (GTEQ < DIV).


State 110

   39 expression: expression . ASSIGN expression
   40           | expression . LOGICAL_OR expression
   41           | expression . LOGICAL_AND expression
   43           | expression . EQ expression
   44           | expression . NE expression
   45           | expression . LS expression
   46           | expression . LSEQ expression
   47           | expression . GTEQ expression
   48           | expression . GT expression
   48           | expression GT expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT]
   49           | expression . PLUS expression
   50           | expression . MINUS expression
   51           | expression . SHIFT_LEFT expression
   52           | expression . SHIFT_RIGHT expression
   53           | expression . MUL expression
   54           | expression . DIV expression

    SHIFT_LEFT   shift, and go to state 84
    SHIFT_RIGHT  shift, and go to state 85
    PLUS         shift, and go to state 86
    MINUS        shift, and go to state 87
    MUL          shift, and go to state 88
    DIV          shift, and go to state 89

    $default  reduce using rule 48 (expression)

    Conflict between rule 48 and token ASSIGN resolved as reduce (ASSIGN < GT).
    Conflict between rule 48 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < GT).
    Conflict between rule 48 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < GT).
    Conflict between rule 48 and token EQ resolved as reduce (EQ < GT).
    Conflict between rule 48 and token NE resolved as reduce (NE < GT).
    Conflict between rule 48 and token LS resolved as reduce (%left LS).
    Conflict between rule 48 and token LSEQ resolved as reduce (%left LSEQ).
    Conflict between rule 48 and token GTEQ resolved as reduce (%left GTEQ).
    Conflict between rule 48 and token GT resolved as reduce (%left GT).
    Conflict between rule 48 and token SHIFT_LEFT resolved as shift (GT < SHIFT_LEFT).
    Conflict between rule 48 and token SHIFT_RIGHT resolved as shift (GT < SHIFT_RIGHT).
    Conflict between rule 48 and token PLUS resolved as shift (GT < PLUS).
    Conflict between rule 48 and token MINUS resolved as shift (GT < MINUS).
    Conflict between rule 48 and token MUL resolved as shift (GT < MUL).
    Conflict between rule 48 and token DIV resolved as shift (GT < DIV).


State 111

   39 expression: expression . ASSIGN expression
   40           | expression . LOGICAL_OR expression
   41           | expression . LOGICAL_AND expression
   43           | expression . EQ expression
   44           | expression . NE expression
   45           | expression . LS expression
   46           | expression . LSEQ expression
   47           | expression . GTEQ expression
   48           | expression . GT expression
   49           | expression . PLUS expression
   50           | expression . MINUS expression
   51           | expression . SHIFT_LEFT expression
   51           | expression SHIFT_LEFT expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT]
   52           | expression . SHIFT_RIGHT expression
   53           | expression . MUL expression
   54           | expression . DIV expression

    PLUS   shift, and go to state 86
    MINUS  shift, and go to state 87
    MUL    shift, and go to state 88
    DIV    shift, and go to state 89

    $default  reduce using rule 51 (expression)

    Conflict between rule 51 and token ASSIGN resolved as reduce (ASSIGN < SHIFT_LEFT).
    Conflict between rule 51 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < SHIFT_LEFT).
    Conflict between rule 51 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < SHIFT_LEFT).
    Conflict between rule 51 and token EQ resolved as reduce (EQ < SHIFT_LEFT).
    Conflict between rule 51 and token NE resolved as reduce (NE < SHIFT_LEFT).
    Conflict between rule 51 and token LS resolved as reduce (LS < SHIFT_LEFT).
    Conflict between rule 51 and token LSEQ resolved as reduce (LSEQ < SHIFT_LEFT).
    Conflict between rule 51 and token GTEQ resolved as reduce (GTEQ < SHIFT_LEFT).
    Conflict between rule 51 and token GT resolved as reduce (GT < SHIFT_LEFT).
    Conflict between rule 51 and token SHIFT_LEFT resolved as reduce (%left SHIFT_LEFT).
    Conflict between rule 51 and token SHIFT_RIGHT resolved as reduce (%left SHIFT_RIGHT).
    Conflict between rule 51 and token PLUS resolved as shift (SHIFT_LEFT < PLUS).
    Conflict between rule 51 and token MINUS resolved as shift (SHIFT_LEFT < MINUS).
    Conflict between rule 51 and token MUL resolved as shift (SHIFT_LEFT < MUL).
    Conflict between rule 51 and token DIV resolved as shift (SHIFT_LEFT < DIV).


State 112

   39 expression: expression . ASSIGN expression
   40           | expression . LOGICAL_OR expression
   41           | expression . LOGICAL_AND expression
   43           | expression . EQ expression
   44           | expression . NE expression
   45           | expression . LS expression
   46           | expression . LSEQ expression
   47           | expression . GTEQ expression
   48           | expression . GT expression
   49           | expression . PLUS expression
   50           | expression . MINUS expression
   51           | expression . SHIFT_LEFT expression
   52           | expression . SHIFT_RIGHT expression
   52           | expression SHIFT_RIGHT expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT]
   53           | expression . MUL expression
   54           | expression . DIV expression

    PLUS   shift, and go to state 86
    MINUS  shift, and go to state 87
    MUL    shift, and go to state 88
    DIV    shift, and go to state 89

    $default  reduce using rule 52 (expression)

    Conflict between rule 52 and token ASSIGN resolved as reduce (ASSIGN < SHIFT_RIGHT).
    Conflict between rule 52 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < SHIFT_RIGHT).
    Conflict between rule 52 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < SHIFT_RIGHT).
    Conflict between rule 52 and token EQ resolved as reduce (EQ < SHIFT_RIGHT).
    Conflict between rule 52 and token NE resolved as reduce (NE < SHIFT_RIGHT).
    Conflict between rule 52 and token LS resolved as reduce (LS < SHIFT_RIGHT).
    Conflict between rule 52 and token LSEQ resolved as reduce (LSEQ < SHIFT_RIGHT).
    Conflict between rule 52 and token GTEQ resolved as reduce (GTEQ < SHIFT_RIGHT).
    Conflict between rule 52 and token GT resolved as reduce (GT < SHIFT_RIGHT).
    Conflict between rule 52 and token SHIFT_LEFT resolved as reduce (%left SHIFT_LEFT).
    Conflict between rule 52 and token SHIFT_RIGHT resolved as reduce (%left SHIFT_RIGHT).
    Conflict between rule 52 and token PLUS resolved as shift (SHIFT_RIGHT < PLUS).
    Conflict between rule 52 and token MINUS resolved as shift (SHIFT_RIGHT < MINUS).
    Conflict between rule 52 and token MUL resolved as shift (SHIFT_RIGHT < MUL).
    Conflict between rule 52 and token DIV resolved as shift (SHIFT_RIGHT < DIV).


State 113

   39 expression: expression . ASSIGN expression
   40           | expression . LOGICAL_OR expression
   41           | expression . LOGICAL_AND expression
   43           | expression . EQ expression
   44           | expression . NE expression
   45           | expression . LS expression
   46           | expression . LSEQ expression
   47           | expression . GTEQ expression
   48           | expression . GT expression
   49           | expression . PLUS expression
   49           | expression PLUS expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS]
   50           | expression . MINUS expression
   51           | expression . SHIFT_LEFT expression
   52           | expression . SHIFT_RIGHT expression
   53           | expression . MUL expression
   54           | expression . DIV expression

    MUL  shift, and go to state 88
    DIV  shift, and go to state 89

    $default  reduce using rule 49 (expression)

    Conflict between rule 49 and token ASSIGN resolved as reduce (ASSIGN < PLUS).
    Conflict between rule 49 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < PLUS).
    Conflict between rule 49 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < PLUS).
    Conflict between rule 49 and token EQ resolved as reduce (EQ < PLUS).
    Conflict between rule 49 and token NE resolved as reduce (NE < PLUS).
    Conflict between rule 49 and token LS resolved as reduce (LS < PLUS).
    Conflict between rule 49 and token LSEQ resolved as reduce (LSEQ < PLUS).
    Conflict between rule 49 and token GTEQ resolved as reduce (GTEQ < PLUS).
    Conflict between rule 49 and token GT resolved as reduce (GT < PLUS).
    Conflict between rule 49 and token SHIFT_LEFT resolved as reduce (SHIFT_LEFT < PLUS).
    Conflict between rule 49 and token SHIFT_RIGHT resolved as reduce (SHIFT_RIGHT < PLUS).
    Conflict between rule 49 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 49 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 49 and token MUL resolved as shift (PLUS < MUL).
    Conflict between rule 49 and token DIV resolved as shift (PLUS < DIV).


State 114

   39 expression: expression . ASSIGN expression
   40           | expression . LOGICAL_OR expression
   41           | expression . LOGICAL_AND expression
   43           | expression . EQ expression
   44           | expression . NE expression
   45           | expression . LS expression
   46           | expression . LSEQ expression
   47           | expression . GTEQ expression
   48           | expression . GT expression
   49           | expression . PLUS expression
   50           | expression . MINUS expression
   50           | expression MINUS expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS]
   51           | expression . SHIFT_LEFT expression
   52           | expression . SHIFT_RIGHT expression
   53           | expression . MUL expression
   54           | expression . DIV expression

    MUL  shift, and go to state 88
    DIV  shift, and go to state 89

    $default  reduce using rule 50 (expression)

    Conflict between rule 50 and token ASSIGN resolved as reduce (ASSIGN < MINUS).
    Conflict between rule 50 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < MINUS).
    Conflict between rule 50 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < MINUS).
    Conflict between rule 50 and token EQ resolved as reduce (EQ < MINUS).
    Conflict between rule 50 and token NE resolved as reduce (NE < MINUS).
    Conflict between rule 50 and token LS resolved as reduce (LS < MINUS).
    Conflict between rule 50 and token LSEQ resolved as reduce (LSEQ < MINUS).
    Conflict between rule 50 and token GTEQ resolved as reduce (GTEQ < MINUS).
    Conflict between rule 50 and token GT resolved as reduce (GT < MINUS).
    Conflict between rule 50 and token SHIFT_LEFT resolved as reduce (SHIFT_LEFT < MINUS).
    Conflict between rule 50 and token SHIFT_RIGHT resolved as reduce (SHIFT_RIGHT < MINUS).
    Conflict between rule 50 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 50 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 50 and token MUL resolved as shift (MINUS < MUL).
    Conflict between rule 50 and token DIV resolved as shift (MINUS < DIV).


State 115

   39 expression: expression . ASSIGN expression
   40           | expression . LOGICAL_OR expression
   41           | expression . LOGICAL_AND expression
   43           | expression . EQ expression
   44           | expression . NE expression
   45           | expression . LS expression
   46           | expression . LSEQ expression
   47           | expression . GTEQ expression
   48           | expression . GT expression
   49           | expression . PLUS expression
   50           | expression . MINUS expression
   51           | expression . SHIFT_LEFT expression
   52           | expression . SHIFT_RIGHT expression
   53           | expression . MUL expression
   53           | expression MUL expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, MUL, DIV]
   54           | expression . DIV expression

    $default  reduce using rule 53 (expression)

    Conflict between rule 53 and token ASSIGN resolved as reduce (ASSIGN < MUL).
    Conflict between rule 53 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < MUL).
    Conflict between rule 53 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < MUL).
    Conflict between rule 53 and token EQ resolved as reduce (EQ < MUL).
    Conflict between rule 53 and token NE resolved as reduce (NE < MUL).
    Conflict between rule 53 and token LS resolved as reduce (LS < MUL).
    Conflict between rule 53 and token LSEQ resolved as reduce (LSEQ < MUL).
    Conflict between rule 53 and token GTEQ resolved as reduce (GTEQ < MUL).
    Conflict between rule 53 and token GT resolved as reduce (GT < MUL).
    Conflict between rule 53 and token SHIFT_LEFT resolved as reduce (SHIFT_LEFT < MUL).
    Conflict between rule 53 and token SHIFT_RIGHT resolved as reduce (SHIFT_RIGHT < MUL).
    Conflict between rule 53 and token PLUS resolved as reduce (PLUS < MUL).
    Conflict between rule 53 and token MINUS resolved as reduce (MINUS < MUL).
    Conflict between rule 53 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 53 and token DIV resolved as reduce (%left DIV).


State 116

   39 expression: expression . ASSIGN expression
   40           | expression . LOGICAL_OR expression
   41           | expression . LOGICAL_AND expression
   43           | expression . EQ expression
   44           | expression . NE expression
   45           | expression . LS expression
   46           | expression . LSEQ expression
   47           | expression . GTEQ expression
   48           | expression . GT expression
   49           | expression . PLUS expression
   50           | expression . MINUS expression
   51           | expression . SHIFT_LEFT expression
   52           | expression . SHIFT_RIGHT expression
   53           | expression . MUL expression
   54           | expression . DIV expression
   54           | expression DIV expression .  [COMMA, SEMICOLON, PARA_CLOSE, ASSIGN, LOGICAL_OR, LOGICAL_AND, EQ, NE, LS, LSEQ, GTEQ, GT, SHIFT_LEFT, SHIFT_RIGHT, PLUS, MINUS, MUL, DIV]

    $default  reduce using rule 54 (expression)

    Conflict between rule 54 and token ASSIGN resolved as reduce (ASSIGN < DIV).
    Conflict between rule 54 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < DIV).
    Conflict between rule 54 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < DIV).
    Conflict between rule 54 and token EQ resolved as reduce (EQ < DIV).
    Conflict between rule 54 and token NE resolved as reduce (NE < DIV).
    Conflict between rule 54 and token LS resolved as reduce (LS < DIV).
    Conflict between rule 54 and token LSEQ resolved as reduce (LSEQ < DIV).
    Conflict between rule 54 and token GTEQ resolved as reduce (GTEQ < DIV).
    Conflict between rule 54 and token GT resolved as reduce (GT < DIV).
    Conflict between rule 54 and token SHIFT_LEFT resolved as reduce (SHIFT_LEFT < DIV).
    Conflict between rule 54 and token SHIFT_RIGHT resolved as reduce (SHIFT_RIGHT < DIV).
    Conflict between rule 54 and token PLUS resolved as reduce (PLUS < DIV).
    Conflict between rule 54 and token MINUS resolved as reduce (MINUS < DIV).
    Conflict between rule 54 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 54 and token DIV resolved as reduce (%left DIV).


State 117

   38 stmt_loop: DO stmt WHILE PARA_OPEN . expression PARA_CLOSE SEMICOLON
   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   44           | . expression NE expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   55           | . MINUS expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    expression     go to state 123
    primary        go to state 58
    function_call  go to state 59


State 118

    9 type: . INT
   10     | . VOID
   11 variable_declaration: . variable_declaration COMMA identifier_declaration
   12                     | . type identifier_declaration
   26 stmt: . stmt_block
   27     | . variable_declaration SEMICOLON
   28     | . expression SEMICOLON
   29     | . stmt_conditional
   30     | . stmt_loop
   31     | . RETURN expression SEMICOLON
   32     | . RETURN SEMICOLON
   33     | . SEMICOLON
   34 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   35 stmt_conditional: . IF PARA_OPEN expression PARA_CLOSE stmt
   36                 | . IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt
   37 stmt_loop: . WHILE PARA_OPEN expression PARA_CLOSE stmt
   37          | WHILE PARA_OPEN expression PARA_CLOSE . stmt
   38          | . DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   44           | . expression NE expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   55           | . MINUS expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 38
    WHILE        shift, and go to state 39
    IF           shift, and go to state 40
    INT          shift, and go to state 4
    VOID         shift, and go to state 5
    RETURN       shift, and go to state 41
    SEMICOLON    shift, and go to state 42
    BRACE_OPEN   shift, and go to state 43
    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    type                  go to state 51
    variable_declaration  go to state 52
    stmt                  go to state 124
    stmt_block            go to state 54
    stmt_conditional      go to state 55
    stmt_loop             go to state 56
    expression            go to state 57
    primary               go to state 58
    function_call         go to state 59


State 119

    9 type: . INT
   10     | . VOID
   11 variable_declaration: . variable_declaration COMMA identifier_declaration
   12                     | . type identifier_declaration
   26 stmt: . stmt_block
   27     | . variable_declaration SEMICOLON
   28     | . expression SEMICOLON
   29     | . stmt_conditional
   30     | . stmt_loop
   31     | . RETURN expression SEMICOLON
   32     | . RETURN SEMICOLON
   33     | . SEMICOLON
   34 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   35 stmt_conditional: . IF PARA_OPEN expression PARA_CLOSE stmt
   35                 | IF PARA_OPEN expression PARA_CLOSE . stmt
   36                 | . IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt
   36                 | IF PARA_OPEN expression PARA_CLOSE . stmt ELSE stmt
   37 stmt_loop: . WHILE PARA_OPEN expression PARA_CLOSE stmt
   38          | . DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   44           | . expression NE expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   55           | . MINUS expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 38
    WHILE        shift, and go to state 39
    IF           shift, and go to state 40
    INT          shift, and go to state 4
    VOID         shift, and go to state 5
    RETURN       shift, and go to state 41
    SEMICOLON    shift, and go to state 42
    BRACE_OPEN   shift, and go to state 43
    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    type                  go to state 51
    variable_declaration  go to state 52
    stmt                  go to state 125
    stmt_block            go to state 54
    stmt_conditional      go to state 55
    stmt_loop             go to state 56
    expression            go to state 57
    primary               go to state 58
    function_call         go to state 59


State 120

   57 expression: ID BRACKET_OPEN primary BRACKET_CLOSE .

    $default  reduce using rule 57 (expression)


State 121

   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   44           | . expression NE expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   55           | . MINUS expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE
   65 function_call_parameters: function_call_parameters COMMA . expression

    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    expression     go to state 126
    primary        go to state 58
    function_call  go to state 59


State 122

   64 function_call: ID PARA_OPEN function_call_parameters PARA_CLOSE .

    $default  reduce using rule 64 (function_call)


State 123

   38 stmt_loop: DO stmt WHILE PARA_OPEN expression . PARA_CLOSE SEMICOLON
   39 expression: expression . ASSIGN expression
   40           | expression . LOGICAL_OR expression
   41           | expression . LOGICAL_AND expression
   43           | expression . EQ expression
   44           | expression . NE expression
   45           | expression . LS expression
   46           | expression . LSEQ expression
   47           | expression . GTEQ expression
   48           | expression . GT expression
   49           | expression . PLUS expression
   50           | expression . MINUS expression
   51           | expression . SHIFT_LEFT expression
   52           | expression . SHIFT_RIGHT expression
   53           | expression . MUL expression
   54           | expression . DIV expression

    PARA_CLOSE   shift, and go to state 127
    ASSIGN       shift, and go to state 75
    LOGICAL_OR   shift, and go to state 76
    LOGICAL_AND  shift, and go to state 77
    EQ           shift, and go to state 78
    NE           shift, and go to state 79
    LS           shift, and go to state 80
    LSEQ         shift, and go to state 81
    GTEQ         shift, and go to state 82
    GT           shift, and go to state 83
    SHIFT_LEFT   shift, and go to state 84
    SHIFT_RIGHT  shift, and go to state 85
    PLUS         shift, and go to state 86
    MINUS        shift, and go to state 87
    MUL          shift, and go to state 88
    DIV          shift, and go to state 89


State 124

   37 stmt_loop: WHILE PARA_OPEN expression PARA_CLOSE stmt .

    $default  reduce using rule 37 (stmt_loop)


State 125

   35 stmt_conditional: IF PARA_OPEN expression PARA_CLOSE stmt .  [DO, WHILE, IF, ELSE, INT, VOID, RETURN, SEMICOLON, BRACE_OPEN, BRACE_CLOSE, PARA_OPEN, ID, NUM, PLUS, MINUS, LOGICAL_NOT]
   36                 | IF PARA_OPEN expression PARA_CLOSE stmt . ELSE stmt

    ELSE  shift, and go to state 128

    ELSE      [reduce using rule 35 (stmt_conditional)]
    $default  reduce using rule 35 (stmt_conditional)


State 126

   39 expression: expression . ASSIGN expression
   40           | expression . LOGICAL_OR expression
   41           | expression . LOGICAL_AND expression
   43           | expression . EQ expression
   44           | expression . NE expression
   45           | expression . LS expression
   46           | expression . LSEQ expression
   47           | expression . GTEQ expression
   48           | expression . GT expression
   49           | expression . PLUS expression
   50           | expression . MINUS expression
   51           | expression . SHIFT_LEFT expression
   52           | expression . SHIFT_RIGHT expression
   53           | expression . MUL expression
   54           | expression . DIV expression
   65 function_call_parameters: function_call_parameters COMMA expression .  [COMMA, PARA_CLOSE]

    ASSIGN       shift, and go to state 75
    LOGICAL_OR   shift, and go to state 76
    LOGICAL_AND  shift, and go to state 77
    EQ           shift, and go to state 78
    NE           shift, and go to state 79
    LS           shift, and go to state 80
    LSEQ         shift, and go to state 81
    GTEQ         shift, and go to state 82
    GT           shift, and go to state 83
    SHIFT_LEFT   shift, and go to state 84
    SHIFT_RIGHT  shift, and go to state 85
    PLUS         shift, and go to state 86
    MINUS        shift, and go to state 87
    MUL          shift, and go to state 88
    DIV          shift, and go to state 89

    $default  reduce using rule 65 (function_call_parameters)


State 127

   38 stmt_loop: DO stmt WHILE PARA_OPEN expression PARA_CLOSE . SEMICOLON

    SEMICOLON  shift, and go to state 129


State 128

    9 type: . INT
   10     | . VOID
   11 variable_declaration: . variable_declaration COMMA identifier_declaration
   12                     | . type identifier_declaration
   26 stmt: . stmt_block
   27     | . variable_declaration SEMICOLON
   28     | . expression SEMICOLON
   29     | . stmt_conditional
   30     | . stmt_loop
   31     | . RETURN expression SEMICOLON
   32     | . RETURN SEMICOLON
   33     | . SEMICOLON
   34 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   35 stmt_conditional: . IF PARA_OPEN expression PARA_CLOSE stmt
   36                 | . IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt
   36                 | IF PARA_OPEN expression PARA_CLOSE stmt ELSE . stmt
   37 stmt_loop: . WHILE PARA_OPEN expression PARA_CLOSE stmt
   38          | . DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   39 expression: . expression ASSIGN expression
   40           | . expression LOGICAL_OR expression
   41           | . expression LOGICAL_AND expression
   42           | . LOGICAL_NOT expression
   43           | . expression EQ expression
   44           | . expression NE expression
   45           | . expression LS expression
   46           | . expression LSEQ expression
   47           | . expression GTEQ expression
   48           | . expression GT expression
   49           | . expression PLUS expression
   50           | . expression MINUS expression
   51           | . expression SHIFT_LEFT expression
   52           | . expression SHIFT_RIGHT expression
   53           | . expression MUL expression
   54           | . expression DIV expression
   55           | . MINUS expression
   56           | . PLUS expression
   57           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   58           | . PARA_OPEN expression PARA_CLOSE
   59           | . function_call
   60           | . primary
   61 primary: . NUM
   62        | . ID
   63 function_call: . ID PARA_OPEN PARA_CLOSE
   64              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 38
    WHILE        shift, and go to state 39
    IF           shift, and go to state 40
    INT          shift, and go to state 4
    VOID         shift, and go to state 5
    RETURN       shift, and go to state 41
    SEMICOLON    shift, and go to state 42
    BRACE_OPEN   shift, and go to state 43
    PARA_OPEN    shift, and go to state 45
    ID           shift, and go to state 46
    NUM          shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    LOGICAL_NOT  shift, and go to state 50

    type                  go to state 51
    variable_declaration  go to state 52
    stmt                  go to state 130
    stmt_block            go to state 54
    stmt_conditional      go to state 55
    stmt_loop             go to state 56
    expression            go to state 57
    primary               go to state 58
    function_call         go to state 59


State 129

   38 stmt_loop: DO stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON .

    $default  reduce using rule 38 (stmt_loop)


State 130

   36 stmt_conditional: IF PARA_OPEN expression PARA_CLOSE stmt ELSE stmt .

    $default  reduce using rule 36 (stmt_conditional)
